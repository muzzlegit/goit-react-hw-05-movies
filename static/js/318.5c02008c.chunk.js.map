{"version":3,"file":"static/js/318.5c02008c.chunk.js","mappings":"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","sources":["components/SearchBar/SearchBar.styles.js","components/SearchBar/SearchBar.jsx","components/SearchMoviesList/SearchMoviesList.styled.js","components/SearchMoviesList/SearchMoviesList.jsx","pages/Movies/Movies.jsx","services/movies-API.js","theme.js"],"sourcesContent":["import styled from '@emotion/styled';\nimport theme from 'theme.js';\n\nexport const Form = styled.form({\n  padding: '.2rem 1rem',\n  display: 'flex',\n  alignItems: 'center',\n  gap: '20px',\n});\nexport const Input = styled.input({\n  padding: '.1rem .5rem',\n  height: '20px',\n  width: '200px',\n  borderRadius: '.3rem',\n  color: theme.colors.text,\n  fontWeight: 'bold',\n  '&:focus': {\n    outline: `1px solid ${theme.colors.text}`,\n  },\n});\nexport const Button = styled.button({\n  color: theme.colors.orange,\n  borderRadius: '.3rem',\n  backgroundColor: theme.colors.text,\n  borderColor: theme.colors.text,\n  '&:hover': {\n    cursor: 'pointer',\n    color: theme.colors.textDarkRed,\n  },\n});\n","import PropTypes from 'prop-types';\nimport { useEffect } from 'react';\nimport { useState } from 'react';\n//ICONS\nimport { MdRocketLaunch } from 'react-icons/md';\n//STYLES\nimport { Form, Input, Button } from './SearchBar.styles';\n\nconst SearchBar = ({ onSubmit, setMoviesChecker }) => {\n  const [query, setQuery] = useState('');\n\n  const onInputChange = e => {\n    setQuery(e.target.value);\n  };\n\n  const onFormSubmit = e => {\n    e.preventDefault();\n    if (query.trim() === '') return;\n\n    onSubmit(query.trim());\n  };\n\n  useEffect(() => {\n    if (query === '') setMoviesChecker(true);\n  }, [query, setMoviesChecker]);\n\n  return (\n    <Form onSubmit={onFormSubmit}>\n      <Input\n        type=\"text\"\n        name=\"name\"\n        required\n        placeholder=\"...search movie\"\n        value={query}\n        onChange={onInputChange}\n      />\n      <Button type=\"submit\" title=\"Search Movie\">\n        <MdRocketLaunch size=\"20px\" />\n      </Button>\n    </Form>\n  );\n};\n\nexport default SearchBar;\n\nSearchBar.propTypes = {\n  onSubmit: PropTypes.func.isRequired,\n  setMoviesChecker: PropTypes.func.isRequired,\n};\n","import styled from '@emotion/styled';\nimport theme from 'theme';\n\nexport const List = styled.ul({\n  padding: '1rem',\n  display: 'flex',\n  flexDirection: 'column',\n  alignItems: 'flex-start',\n  gap: '0.5rem',\n});\nexport const Item = styled.li({\n  padding: '.2rem 1rem',\n  border: `1px solid ${theme.colors.textGrey}`,\n});\n","import PropTypes from 'prop-types';\nimport { Link, useLocation } from 'react-router-dom';\n//STYLES\nimport theme from 'theme';\nimport { List, Item } from './SearchMoviesList.styled';\n\nconst SearchMoviesList = ({ movies }) => {\n  const location = useLocation();\n  return (\n    <List>\n      {movies.map(movie => {\n        return (\n          <Item key={movie.id}>\n            <Link\n              to={`${movie.id}`}\n              state={{ from: location }}\n              style={{\n                display: 'block',\n                fontSize: '1rem',\n                textDecoration: 'none',\n                color: theme.colors.text,\n              }}\n            >\n              {movie.title}\n            </Link>\n          </Item>\n        );\n      })}\n    </List>\n  );\n};\n\nexport default SearchMoviesList;\n\nSearchMoviesList.propTypes = {\n  movies: PropTypes.arrayOf(\n    PropTypes.shape({\n      id: PropTypes.number.isRequired,\n      title: PropTypes.string.isRequired,\n    })\n  ),\n};\n","import { useState, useEffect } from 'react';\nimport { useSearchParams } from 'react-router-dom';\n//COMPONENTS\nimport SearchBar from 'components/SearchBar/SearchBar';\nimport SearchMoviesList from 'components/SearchMoviesList/SearchMoviesList';\n//API\nimport { getMoviesByQuery } from 'services/movies-API';\n\nconst Movies = () => {\n  const [movies, setMovies] = useState([]);\n  const [searchParams, setSearchParams] = useSearchParams();\n  const [moviesChecker, setMoviesChecker] = useState(true);\n\n  const searched = searchParams.get('query');\n\n  useEffect(() => {\n    if (searched)\n      getMoviesByQuery(searched.trim()).then(res => {\n        res.results.length ? setMoviesChecker(true) : setMoviesChecker(false);\n        setMovies(res.results);\n      });\n  }, [searched]);\n\n  const handleFormSubmit = query => {\n    setSearchParams({ query });\n    getMoviesByQuery(query.trim()).then(res => setMovies(res.results));\n  };\n  return (\n    <div>\n      <SearchBar\n        onSubmit={handleFormSubmit}\n        setMoviesChecker={setMoviesChecker}\n      />\n      {moviesChecker ? (\n        <SearchMoviesList movies={movies} />\n      ) : (\n        <h2 style={{ fontSize: '20px', color: '#FFF', marginLeft: '1rem' }}>\n          Nothing found ... try again\n        </h2>\n      )}\n    </div>\n  );\n};\n\nexport default Movies;\n","const API_KEY = 'd0a89e21518eb34bf114239006a7498b';\n\nconst BASE_URL = 'https://api.themoviedb.org/3';\n\nasync function moviesApiService(url) {\n  const response = await fetch(url);\n  return response.ok ? response.json() : Promise.reject(new Error('Not found'));\n}\n\nexport function getTrendingMovies() {\n  return moviesApiService(`${BASE_URL}/trending/movie/day?api_key=${API_KEY}`);\n}\nexport function getMovieById(movieId) {\n  return moviesApiService(`${BASE_URL}/movie/${movieId}?api_key=${API_KEY}`);\n}\nexport function getMovieReviews(movieId) {\n  return moviesApiService(\n    `${BASE_URL}/movie/${movieId}/reviews?api_key=${API_KEY}`\n  );\n}\nexport function getMovieCast(movieId) {\n  return moviesApiService(\n    `${BASE_URL}/movie/${movieId}/credits?api_key=${API_KEY}`\n  );\n}\nexport function getMoviesByQuery(query) {\n  return moviesApiService(\n    `${BASE_URL}/search/movie?query=${query}&api_key=${API_KEY}`\n  );\n}\n","const theme = {\n  colors: {\n    primary: '#3e4e55',\n    primaryLight: '#4b5c63',\n    primaryDark: '#36464d',\n\n    text: '#497b86',\n    textGrey: '#182c33',\n    textRed: '#c12701',\n    textDarkRed: 'rgba(135, 30, 1, 1)',\n\n    orange: '#ff6b01',\n\n    acent: '#24c1e0',\n    white: '#FFF',\n    whiteRGBA: 'rgba(255,255,255,.3)',\n    black: '#000',\n    warm: '#DBC7C9',\n    pink: '#ffa5a9',\n    pGreen: '#88A795',\n    pGray: '#AAABA8',\n    hr: '#BC7B77',\n    red: '#DC2626',\n    green: '#00ea00',\n  },\n\n  shadows: {\n    box: '10px 10px 10px -1px rgba(255, 255, 255, .1)',\n  },\n};\nexport default theme;\n"],"names":["Form","styled","padding","display","alignItems","gap","Input","height","width","borderRadius","color","theme","fontWeight","outline","Button","backgroundColor","borderColor","cursor","onSubmit","setMoviesChecker","useState","query","setQuery","useEffect","e","preventDefault","trim","type","name","required","placeholder","value","onChange","target","title","size","List","flexDirection","Item","border","movies","location","useLocation","map","movie","to","id","state","from","style","fontSize","textDecoration","setMovies","useSearchParams","searchParams","setSearchParams","moviesChecker","searched","get","getMoviesByQuery","then","res","results","length","marginLeft","API_KEY","BASE_URL","moviesApiService","url","fetch","response","ok","json","Promise","reject","Error","getTrendingMovies","getMovieById","movieId","getMovieReviews","getMovieCast","colors","primary","primaryLight","primaryDark","text","textGrey","textRed","textDarkRed","orange","acent","white","whiteRGBA","black","warm","pink","pGreen","pGray","hr","red","green","shadows","box"],"sourceRoot":""}